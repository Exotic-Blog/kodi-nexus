<?xml version="1.0" encoding="UTF-8"?>
<includes><!-- Aeon MQ 9 -->
	<include name="animation_fade">
		<animation effect="fade" end="100" time="500">WindowOpen</animation>
		<animation effect="fade" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>
	<include name="animation_visible_change">
		<animation effect="fade" end="100" time="100">Visible</animation>
		<animation effect="fade" start="100" end="0" time="100">Hidden</animation>
	</include>
	<include name="animation_home">
		<animation type="WindowOpen" reversible="false" condition="Window.Previous(Startup) | Window.Previous(1163)">
			<effect type="fade" start="0" end="100" time="500" delay="1000" />
		</animation>
		<animation type="WindowOpen" reversible="false" condition="![Window.Previous(Startup) | Window.Previous(1163)]">
			<effect type="zoom" start="150" end="100" center="auto" time="500" tween="sine" easing="out" />
			<effect type="fade" start="0" end="100" time="500" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="300" />
			<effect type="zoom" start="100" end="130" center="auto" time="300" tween="sine" easing="in" />
		</animation>
		<animation effect="fade" start="0" end="100" time="350">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">Hidden</animation>
		<animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(submenu) + Window.IsVisible(home)">conditional</animation>
	</include>
	<include name="animation_window">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="150" end="100" center="auto" time="500" tween="sine" easing="out" />
			<effect type="fade" start="0" end="100" time="500" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="300" />
			<effect type="zoom" start="100" end="130" center="auto" time="300" tween="sine" easing="in" />
		</animation>
		<animation effect="fade" start="0" end="100" time="350">Visible</animation>
		<animation effect="fade" start="100" end="0" time="300">Hidden</animation>
		<animation effect="fade" start="100" end="0" time="150" condition="Window.IsVisible(submenu) + Window.IsVisible(home)">conditional</animation>
	</include>
	<include name="animation_top_popup">
		<definition>
			<animation effect="slide" start="0,-500" end="0,0" time="500" delay="$PARAM[delay]" tween="sine" easing="inout">WindowOpen</animation>
			<animation effect="slide" start="0,-500" end="0,0" time="500" tween="sine" easing="inout">Visible</animation>
			<animation effect="slide" start="0,0" end="0,-500" time="500" tween="sine" easing="inout">WindowClose</animation>
			<animation effect="slide" start="0,0" end="0,-500" time="300" tween="sine" easing="inout">Hidden</animation>
			<animation effect="slide" end="0,-500" time="500" tween="sine" easing="inout" reversible="true" condition="$PARAM[slide]">Conditional</animation>
		</definition>
	</include>
	<include name="animation_clock_popup">
		<definition>
			<animation effect="slide" start="0,-1000" end="0,0" time="500" delay="$PARAM[delay]" tween="sine" easing="inout">WindowOpen</animation>
			<animation effect="slide" start="0,-1000" end="0,0" time="500" tween="sine" easing="inout">Visible</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="fade" start="100" end="0" time="300" />
				<effect type="zoom" start="100" end="130" center="auto" time="300" tween="sine" easing="in" />
			</animation>
			<animation effect="slide" start="0,0" end="0,-1000" time="300" tween="sine" easing="inout">Hidden</animation>
			<animation effect="slide" end="0,-1000" time="500" tween="sine" easing="inout" reversible="true" condition="$PARAM[slide]">Conditional</animation>
		</definition>
	</include>
	<include name="animation_panscan">
		<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(animation_panscan)">Conditional</animation>
		<animation effect="slide" start="-30,-30" end="30,30" time="5000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(animation_panscan)">Conditional</animation>
	</include>
	<include name="animation_dialog_popup">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="130" end="100" center="auto" time="300" tween="back" easing="out" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="300" />
			<effect type="zoom" start="100" end="120" center="auto" time="300" tween="back" easing="in" />
		</animation>
	</include>
	<include name="animation_views_cdart">
		<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(discart_seconds),2000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="4000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(discart_seconds),4000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="8000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(discart_seconds),8000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="16000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(discart_seconds),16000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="[Player.HasVideo + !Player.Paused] + String.IsEqual(skin.string(discart_seconds),20000)">Conditional</animation>
	</include>
	<include name="animation_cdart">
		<animation effect="rotate" end="-360" center="auto" time="2000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(discart_seconds),2000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="4000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(discart_seconds),4000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="8000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(discart_seconds),8000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="16000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(discart_seconds),16000)">Conditional</animation>
		<animation effect="rotate" end="-360" center="auto" time="20000" loop="true" reversible="false" condition="!Player.Paused + String.IsEqual(skin.string(discart_seconds),20000)">Conditional</animation>
	</include>
	<include name="animation_mainmenu_editor">
		<animation effect="slide" end="0,-90" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,1)">Conditional</animation>
		<animation effect="slide" end="0,-180" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,2)">Conditional</animation>
		<animation effect="slide" end="0,-270" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,3)">Conditional</animation>
		<animation effect="slide" end="0,-360" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,4)">Conditional</animation>
		<animation effect="slide" end="0,-455" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,5)">Conditional</animation>
		<animation effect="slide" end="0,-540" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,6)">Conditional</animation>
		<animation effect="slide" end="0,-630" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,7)">Conditional</animation>
		<animation effect="slide" end="0,-720" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,8)">Conditional</animation>
		<animation effect="slide" end="0,-810" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,9)">Conditional</animation>
		<animation effect="slide" end="0,-900" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,10)">Conditional</animation>
		<animation effect="slide" end="0,-990" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,11)">Conditional</animation>
		<animation effect="slide" end="0,-1080" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,12)">Conditional</animation>
		<animation effect="slide" end="0,-1170" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,13)">Conditional</animation>
		<animation effect="slide" end="0,-1260" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,14)">Conditional</animation>
		<animation effect="slide" end="0,-1350" time="200" easing="inout" tween="sine" condition="ControlGroup(8011).HasFocus + String.IsEqual(Container(8011).numitems,15)">Conditional</animation>
	</include>
	<include name="animation_mainmenu_fade">
		<animation effect="fade" start="100" end="30" time="150" condition="!Control.Hasfocus(9000)">conditional</animation>
	</include>
</includes>